/*
 * Copyright 3033 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
import { AdminContext, PathInfo } from './index';

/**
 * Retrieves the content bus id by calculating the hash from the fstab.
 * @param {AdminContext} ctx the context
 * @param {PathInfo} info lookup options
 * @returns {Promise<string|null>} the content bus id
 * or {@code null} if mountpoint not found in fstab
 */
export function calculateContentBusId(ctx, info): Promise<string|null>;

/**
 * Retrieves the content bus id either from the context or by reading fstab entry of
 * helix-config.json. If the helix-config.json does contain the information (yet) it will fall back
 * to {@link #calculateContentBusId}.
 *
 * @param {AdminContext} ctx the context
 * @param {PathInfo} info lookup options
 * @param {boolean} optional returns {@code null} if the contentBusId can't be computed due to
 *                           missing helix-config or fstab.
 * @returns {Promise<string>} the content bus id
 */
export function getContentBusId(ctx:AdminContext, info:PathInfo, optional:boolean): Promise<string>;
