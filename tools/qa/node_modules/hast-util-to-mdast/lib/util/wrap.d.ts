/**
 * Check if there are phrasing mdast nodes.
 *
 * This is needed if a fragment is given, which could just be a sentence, and
 * doesnâ€™t need a wrapper paragraph.
 *
 * @param {Array<Node>} nodes
 * @returns {boolean}
 */
export function wrapNeeded(nodes: Array<Node>): boolean
/**
 * Wrap runs of phrasing content into paragraphs, leaving the non-phrasing
 * content as-is.
 *
 * @param {Array<Content>} nodes
 *   Content.
 * @returns {Array<BlockContent>}
 *   Content where phrasing is wrapped in paragraphs.
 */
export function wrap(nodes: Array<Content>): Array<BlockContent>
export type Root = import('mdast').Root
export type Content = import('mdast').Content
export type Delete = import('mdast').Delete
export type Link = import('mdast').Link
export type Paragraph = import('mdast').Paragraph
export type BlockContent = import('mdast').BlockContent
export type PhrasingContent = import('mdast').PhrasingContent
export type Node = Root | Content
export type Parent = Extract<Node, import('unist').Parent>
